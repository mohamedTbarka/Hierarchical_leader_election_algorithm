@startuml

title __SRC's Class Diagram__\n

  namespace  {
    class BroadcastNode {
        ~ informed : boolean
        + onMessage()
        + onSelection()
        + onStart()
    }
  }
  

  namespace  {
    class Height {
        - delta : int
        - id : char
        - lid : char
        - nlts : int
        - oid : int
        - r : int
        - tau : int
        + Height()
        + compareTo()
        + getDelta()
        + getId()
        + getLid()
        + getNlts()
        + getOid()
        + getR()
        + getTau()
        + setDelta()
        + setId()
        + setLid()
        + setNlts()
        + setOid()
        + setR()
        + setTau()
    }
  }
  

  namespace  {
    class HelloWorld {
        {static} + main()
    }
  }
  

  namespace  {
    class LonerMessageBased {
        - heardSomeone : boolean
        - l : String
        + onClock()
        + onMessage()
    }
  }
  

  namespace  {
    class MessagePassing {
        {static} + main()
    }
  }
  

  namespace  {
    class MyBackgroundPainter {
        {static} + main()
        + paintBackground()
    }
  }
  

  namespace  {
    class MyNode {
        - forming : HashMap<Character, MyNode>
        - heightChanged : boolean
        - heights : HashMap<Character, Height>
        - id : char
        - lc : int
        - neighbors : HashMap<Character, MyNode>
        - pred : char
        - slid : char
        + MyNode()
        + adoptLPIfPriority()
        + electself()
        + getForming()
        + getHeights()
        + getId()
        + getLc()
        + getNs()
        + getPred()
        + getSlid()
        + onLinkAdded()
        + onLinkRemoved()
        + onMessage()
        + prograteLargestRefLevel()
        + reflectRefLevel()
        + setForming()
        + setHeights()
        + setId()
        + setLabel()
        + setLc()
        + setNs()
        + setPred()
        + setSlid()
        + sink()
        + startNewRefLevel()
    }
  }
  

  namespace  {
    class SampleExecution {
        {static} + main()
    }
  }
  

  namespace  {
    class Test {
        ~ tp : Topology
        + Test()
        + actionPerformed()
        {static} + main()
    }
  }
  

  BroadcastNode -up-|> io.jbotsim.core.Node
  Height .up.|> java.lang.Comparable
  LonerMessageBased -up-|> io.jbotsim.core.Node
  MyBackgroundPainter .up.|> io.jbotsim.ui.painting.BackgroundPainter
  MyNode -up-|> io.jbotsim.core.Node
  Test .up.|> java.awt.event.ActionListener


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
